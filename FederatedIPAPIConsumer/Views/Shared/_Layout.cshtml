@using FederatedAuthNAuthZ.Extensions
@using FederatedAuthNAuthZ.Configuration
@{
    IFederatedApplicationSettings FederatedApplicationSettings = ViewBag.FederatedApplicationSettings as IFederatedApplicationSettings;
    bool isDarkMode = ViewBag.IsDarkMode == true;
}
<!DOCTYPE html>
<html lang="en-us">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />
    <title>@FederatedApplicationSettings.SiteName</title>
    @Styles.Render(ViewBag.ThemeBundle as string)


    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    @if (ViewBag.Logout == true)
    {
        <main>
            <div class="container body-content">
                @RenderBody()
            </div>
        </main>
    }
    else
    {
        @Html.PageLoadLink()
        @Html.AntiForgeryForm()
        <header>
            <nav class="py-lg-0 navbar navbar-expand-lg @(isDarkMode ? "navbar-dark bg-primary" : "navbar-dark bg-primary")">
                <a class="py-lg-1 navbar-brand" href="#">
                    <span class="row">
                        <span class="col-auto px-1 align-self-center">
                            <span class="col-auto px-1">
                                <img src="~/Content/Images/logo.png" alt="@FederatedApplicationSettings.SiteName Logo" width="40" height="40" />
                            </span>
                        </span>
                        <span class="col-auto px-1 align-self-center">
                            <span class="row">
                                <span class="col lead">@FederatedApplicationSettings.SiteName</span>
                            </span>
                            <span class="row">
                                <span class="col lead-sm">@FederatedApplicationSettings.SiteDescription</span>
                            </span>
                        </span>
                    </span>
                    
                </a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse font-weight-light" id="navbarSupportedContent">

                    @if (User.Identity.IsAuthenticated)
                    {
                        <ul class="navbar-nav mr-auto">
                            <li class="nav-item">
                                @Html.ActionLink("Home", "Index", "Home", new { }, new { @class = "nav-link" })
                            </li>
                            <li class="nav-item">
                                @Html.ActionLink("About", "About", "Home", new { }, new { @class = "nav-link" })
                            </li>
                            <li class="nav-item">
                                @Html.ActionLink("Contact", "Contact", "Home", new { }, new { @class = "nav-link" })
                            </li>
                            <li class="nav-item">
                                @Html.ActionLink("Components", "BootstrapComponents", "Home", new { }, new { @class = "nav-link" })
                            </li>

                        </ul>
                        
                        <ul class="navbar-nav">
                            <li class="nav-item">

                                @if (isDarkMode)
                                {
                                    <a href="@Url.Action("ChangeTheme", "Home", new { theme = FederatedApplicationSettings.Theme })" class="nav-link" data-toggle="tooltip" title="Dark Mode is on">Dark Mode <i class="fas fa-toggle-on text-warning" aria-hidden="true"><span class="sr-only">On</span></i></a>
                                }
                                else
                                {
                                    <a href="@Url.Action("ChangeTheme", "Home", new { theme = FederatedApplicationSettings.DarkTheme })" class="nav-link" data-toggle="tooltip" title="Dark Mode is off">Dark Mode <i class="fas fa-toggle-off" aria-hidden="true"><span class="sr-only">Off</span></i></a>
                                }
                            </li>
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="HeaderUserDropdown" role="button" data-toggle="dropdown" aria-expanded="false">
                                    <i class="fa fa-user-circle mr-1" aria-hidden="true"></i>@ViewBag.CurrentUserName <span class="sr-only">Menu</span>
                                </a>
                                <ul class="dropdown-menu dropdown-menu-right" aria-labelledby="HeaderUserDropdown">
                                    <li>@Html.ActionLink("Logout", "Logout", "Home", new { }, new { @class = "dropdown-item" })</li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <div class="dropdown-item-text bg-light text-dark py-1">
                                            <small>Session Ends</small>
                                            <div class="logout-countdown">@ViewBag.CurrentUserName</div>
                                        </div>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    }

                </div>
            </nav>
        </header>
        <main>
            <div class="container body-content my-4">
                @RenderBody()
            </div>
        </main>
        <footer class="text-center container-fluid border-top">

            <div class="row">
                <div class="col align-self-center p-0">
                    <nav class="navbar navbar-expand @(isDarkMode ? "navbar-dark bg-primary": "navbar-light bg-light") py-0 mx-auto border-0">
                        <ul class="navbar-nav mx-auto pb-0">
                            <li class="nav-item">
                                @Html.ActionLink("Cookie Policy", "CookiePolicy", "Home", new { }, new { @class = "nav-link pb-0 pt-1" })
                            </li>
                            <li class="nav-item">
                                @Html.ActionLink("Privacy Policy", "PrivacyPolicy", "Home", new { }, new { @class = "nav-link pb-0 pt-1" })
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
            <div class="row">
                <div class="col align-self-center p-0">
                    <nav class="navbar navbar-expand @(isDarkMode ? "navbar-dark bg-primary": "navbar-light bg-light") py-0 border-0">
                        <span class="navbar-text py-0 mx-auto">
                            <small>@FederatedApplicationSettings.Display()</small>
                        </span>
                    </nav>
                </div>
            </div>
            <div class="row">
                <div class="col align-self-center p-0">
                    <nav class="navbar navbar-dark @(FederatedApplicationSettings.NetworkIs("Classified") ? "bg-danger": "bg-success") py-0">
                        <div class="navbar-text text-uppercase py-1">
                            @FederatedApplicationSettings.GetNetworkDisplay()
                        </div>
                        @if (FederatedApplicationSettings.HasNetworkDescription())
                        {
                            <div class="navbar-text py-1">
                                <small>@FederatedApplicationSettings.SiteNetworkDescription</small>
                            </div>
                        }
                    </nav>
                </div>
            </div>
        </footer>
        
        Html.RenderPartial("AlertModal", "default");
        if (ViewBag.IsAuthenticated)
        {
            Html.RenderPartial("AlertModal", "sessionTimeout");
        }
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")
        @Scripts.Render("~/bundles/dataTables")



        @Scripts.Render("~/bundles/site")
        <script type="text/javascript">
        $.siteInit({
            authenticated: '@ViewBag.IsAuthenticated' === 'True',
            siteMap: '@Html.Raw(ViewBag.SiteMap)',
            sessionTimeout: parseFloat('@ViewBag.SessionTimeout')
        });
        </script>
    }

    @RenderSection("scripts", required: false)
</body>
</html>
