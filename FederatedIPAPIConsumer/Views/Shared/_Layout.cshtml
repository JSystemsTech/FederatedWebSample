@using FederatedIPAuthenticationService.Extensions
@using FederatedIPAuthenticationService.Configuration
@{
    IFederatedApplicationSettings FederatedApplicationSettings = ViewBag.FederatedApplicationSettings as IFederatedApplicationSettings;
    bool isDarkMode = ViewBag.IsDarkMode == true;
}
<!DOCTYPE html>
<html lang="en-us">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />
    <title>@FederatedApplicationSettings.SiteName</title>
    @Styles.Render(ViewBag.ThemeBundle as string)


    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    @if (ViewBag.Logout == true)
    {
        <main>
            <div class="container body-content">
                @RenderBody()
            </div>
        </main>
    }
    else
    {
        @Html.PageLoadLink()
        @Html.AntiForgeryForm()
        <header>
            <nav class="py-lg-0 navbar navbar-expand-lg @(isDarkMode ? "navbar-dark bg-primary" : "navbar-dark bg-primary")">
                <a class="py-lg-1 navbar-brand" href="#">
                    <span class="row">
                        <span class="col-auto px-1 align-self-center">
                            <span class="col-auto px-1">
                                <img src="~/Content/Images/logo.png" alt="@FederatedApplicationSettings.SiteName Logo" width="40" height="40" />
                            </span>
                        </span>
                        <span class="col-auto px-1 align-self-center">
                            <span class="row">
                                <span class="col lead">@FederatedApplicationSettings.SiteName</span>
                            </span>
                            <span class="row">
                                <span class="col lead-sm">@FederatedApplicationSettings.SiteDescription</span>
                            </span>
                        </span>
                    </span>
                    
                </a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse font-weight-light" id="navbarSupportedContent">

                    @if (ViewBag.IsAuthenticated)
                    {
                        <ul class="navbar-nav mr-auto">
                            <li class="nav-item">
                                @Html.ActionLink("Home", "Index", "Home", new { }, new { @class = "nav-link" })
                            </li>
                            <li class="nav-item">
                                @Html.ActionLink("About", "About", "Home", new { }, new { @class = "nav-link" })
                            </li>
                            <li class="nav-item">
                                @Html.ActionLink("Contact", "Contact", "Home", new { }, new { @class = "nav-link" })
                            </li>

                        </ul>
                        <ul class="navbar-nav">
                            <li class="nav-item mr-2">
                                <div class="navbar-text">@ViewBag.CurrentUserName</div>
                            </li>
                            <li class="nav-item">
                                <div class="navbar-text logout-countdown"></div>
                            </li>
                            
                            <li class="nav-item">
                                @Html.ActionLink("Logout", "Logout", "Home", new { }, new { @class = "nav-link" })
                            </li>
                            <li class="nav-item">

                                @if (isDarkMode)
                                {
                                    @Html.ActionLink("Dark Mode (on)", "ChangeTheme", "Home", new { theme = FederatedApplicationSettings.Theme }, new { @class = "nav-link" })
                                }
                                else
                                {
                                    @Html.ActionLink("Dark Mode (off)", "ChangeTheme", "Home", new { theme = FederatedApplicationSettings.DarkTheme }, new { @class = "nav-link" })
                                }
                            </li>
                        </ul>
                    }

                </div>
            </nav>
        </header>
        <main>
            <div class="container body-content my-4">
                @RenderBody()
            </div>
        </main>
        <footer class="text-center container-fluid border-top">
            <div class="row">
                <div class="col align-self-center py-2">
                    <p class="mb-0">@FederatedApplicationSettings.Display()</p>
                </div>
            </div>
            <div class="row @(FederatedApplicationSettings.NetworkIs("Classified") ? "bg-text-danger": "bg-text-success")" style="font-size:0.7em;">
                <div class="col align-self-center py-0">
                    <div class="mb-0 text-uppercase">@FederatedApplicationSettings.GetNetworkDisplay()</div>
                    @if (FederatedApplicationSettings.HasNetworkDescription())
                    {
                        <div class="mb-0"><small>@FederatedApplicationSettings.SiteNetworkDescription</small></div>
                    }
                </div>
            </div>
        </footer>
        
        Html.RenderPartial("AlertModal", "default");
        if (ViewBag.IsAuthenticated)
        {
            Html.RenderPartial("AlertModal", "sessionTimeout");
        }
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")
        @Scripts.Render("~/bundles/dataTables")



        @Scripts.Render("~/bundles/site")
        <script type="text/javascript">
        $.siteInit({
            authenticated: '@ViewBag.IsAuthenticated' === 'True',
            siteMap: '@Html.Raw(ViewBag.SiteMap)',
            sessionTimeout: parseFloat('@ViewBag.SessionTimeout')
        });
        </script>
    }

    @RenderSection("scripts", required: false)
</body>
</html>
