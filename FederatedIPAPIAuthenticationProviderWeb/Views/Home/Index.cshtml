@model FederatedIPAPIAuthenticationProviderWeb.Models.LoginVM

@foreach (var authMode in Model.FormViewModes)
{
    Html.RenderAction(authMode.FormView);
}

@*else if (Model.ConsumingApplicationFederatedApplicationSettings.AuthenticationModes.Contains(AuthenticationMode.Email))
    {
        using (Html.BeginForm("Login", "Home", new { Mode = AuthenticationMode.Email }, FormMethod.Post, new { @id = "LoginFormEmail" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-row">
                <div class="col-12 text-left">
                    @Html.BootstrapEmailInputFormControlFor(m => m.Email, new { required = true }).AddLabelAndValidation()
                </div>
            </div>
            <div class="form-row">
                <div class="col-12 text-left">
                    @Html.BootstrapPasswordInputFormControlFor(m => m.Password, new { required = true }).AddLabelAndValidation()
                </div>
            </div>
            <div class="form-row mt-1">
                <div class="col-12 text-left">
                    <button type="submit" class="btn btn-primary w-100" data-toggle="popover" title="Login" data-content="Login to @(ConsumingApplicationFederatedApplicationSettings.SiteName) with email and password" data-trigger="hover" data-container="body" data-placement="top">
                        <span class="ml-1"><i class="fa fa-sign-in-alt"></i></span>
                        <span class="ml-1">Login</span>
                    </button>
                </div>
            </div>
        }
    }*@

